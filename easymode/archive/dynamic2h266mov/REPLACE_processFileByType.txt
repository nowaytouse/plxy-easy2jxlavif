// 这是要替换到main.go中的processFileByType函数（H.266专用版本）

func processFileByType(filePath string, opts Options) (string, string, string, error) {
	// 动态图片转H.266/VVC编码MOV的实际转换逻辑
	outputPath := strings.TrimSuffix(filePath, filepath.Ext(filePath)) + ".mov"
	conversionMode := "动图转H.266编码MOV"

	// ✅ 步骤1: 捕获源文件的文件系统元数据（在转换之前）
	srcInfo, _ := os.Stat(filePath)
	var creationTime time.Time
	if srcInfo != nil {
		if stat, ok := srcInfo.Sys().(*syscall.Stat_t); ok {
			creationTime = time.Unix(stat.Birthtimespec.Sec, stat.Birthtimespec.Nsec)
		}
	}
	
	logger.Printf("🎯 使用H.266/VVC编码器（最新标准，极致压缩）")
	
	// ✅ 步骤2: 使用H.266编码
	args := []string{
		"-i", filePath,
		"-c:v", "libvvenc",         // H.266/VVC编码器
		"-qp", "28",                // 质量参数（类似H.265的CRF 28）
		"-preset", "medium",        // 速度预设（slower/slow/medium/fast/faster）
		"-pix_fmt", "yuv420p",      // 像素格式
		"-map_metadata", "0",       // ✅ 复制所有元数据
		"-movflags", "use_metadata_tags", // ✅ 保留MOV元数据标签
		"-f", "mov",                // MOV格式
		"-y", outputPath,           // 覆盖输出
	}

	ctx, cancel := context.WithTimeout(globalCtx, time.Duration(opts.TimeoutSeconds)*time.Second)
	defer cancel()

	cmd := exec.CommandContext(ctx, "ffmpeg", args...)
	if output, err := cmd.CombinedOutput(); err != nil {
		return conversionMode, "", string(output), fmt.Errorf("ffmpeg H.266编码失败: %v\n输出: %s", err, string(output))
	}

	logger.Printf("✅ 动图转MOV成功（H.266编码）: %s", filepath.Base(outputPath))

	// ✅ 步骤3: 复制EXIF元数据（会改变文件修改时间）
	if err := copyMetadata(filePath, outputPath); err != nil {
		logger.Printf("⚠️  EXIF元数据复制失败: %s -> %s: %v",
			filepath.Base(filePath), filepath.Base(outputPath), err)
	} else {
		logger.Printf("✅ EXIF元数据复制成功: %s", filepath.Base(outputPath))
	}

	// ✅ 步骤4: 恢复文件系统元数据（在exiftool之后）
	if srcInfo != nil {
		// 4.1 恢复Finder标签和注释
		if err := copyFinderMetadata(filePath, outputPath); err != nil {
			logger.Printf("⚠️  Finder元数据复制失败 %s: %v", filepath.Base(outputPath), err)
		} else {
			logger.Printf("✅ Finder元数据复制成功: %s", filepath.Base(outputPath))
		}

		// 4.2 恢复修改时间和创建时间（使用touch统一设置）
		if !creationTime.IsZero() {
			timeStr := creationTime.Format("200601021504.05")
			touchCmd := exec.Command("touch", "-t", timeStr, outputPath)
			if err := touchCmd.Run(); err != nil {
				logger.Printf("⚠️  文件时间恢复失败 %s: %v", filepath.Base(outputPath), err)
			} else {
				logger.Printf("✅ 文件系统元数据已保留: %s (创建/修改: %s)",
					filepath.Base(outputPath), creationTime.Format("2006-01-02 15:04:05"))
			}
		}
	}

	return conversionMode, outputPath, "", nil
}

